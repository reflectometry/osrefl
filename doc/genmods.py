from __future__ import with_statement
import os.path

MODULE_TEMPLATE=""".. Autogenerated by genmods.py

******************************************************************************
%(name)s
******************************************************************************

:mod:`%(package)s.%(module)s`
==============================================================================

.. automodule:: %(package)s.%(module)s
   :members:
   :undoc-members:
   :inherited-members:
   :show-inheritance:

"""

INDEX_TEMPLATE=""".. Autogenerated by genmods.py

.. _api-index:

##############################################################################
%(package_name)s
##############################################################################

.. only:: html

   :Release: |version|
   :Date: |today|

.. toctree::

   %(rsts)s
"""
def genfiles(package, package_name, modules, dir='api'):
    '''
    genfiles creates rest documents for the set of modules given  the modules
    list. Each module is a pair of the module and the title seen in the
    documentation.
    
    package as well as all local variables (including the function parameters)
    are being used as substitution names in the MODULE_TEMPLATE through 
    the %local() function.
    '''
    if not os.path.exists(dir):
        os.makedirs(dir)

    for module,name in modules:
        with open(os.path.join(dir,module+'.rst'), 'w') as f:
            f.write(MODULE_TEMPLATE%locals())

    rsts = "\n   ".join(module+'.rst' for module,name in modules)
    with open(os.path.join(dir,'index.rst'),'w') as f:
        f.write(INDEX_TEMPLATE%locals())
    
modules=[

    ('model.sample_prep', 'Model Creation'),
    ('theory.scatter', 'Calculations'),
    ('loaders.andr_load', 'Data Load'),
    ('model.omf_loader','.omf File Loader'),

    ]
package='osrefl'
package_name='Reference'
genfiles(package, package_name, modules)